# Generated by Django 5.2.5 on 2025-08-11 03:51

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre del Curso')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('precio', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Precio')),
                ('duracion_semanas', models.PositiveIntegerField(verbose_name='Duración en Semanas')),
                ('nivel', models.CharField(choices=[('principiante', 'Principiante'), ('intermedio', 'Intermedio'), ('avanzado', 'Avanzado')], max_length=20, verbose_name='Nivel')),
                ('contenido', models.JSONField(default=list, verbose_name='Contenido del Curso')),
                ('ubicacion', models.CharField(default='Centro de Capacitación TechPro', max_length=200, verbose_name='Ubicación')),
                ('horario', models.CharField(default='Lunes a Viernes 7:00 PM - 9:00 PM', max_length=100, verbose_name='Horario')),
                ('instructor', models.CharField(default='Instructor Especializado', max_length=100, verbose_name='Instructor')),
                ('activo', models.BooleanField(default=True, verbose_name='Curso Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'db_table': 'cursos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Examen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre del Examen')),
                ('tipo', models.CharField(choices=[('teorico', 'Teórico'), ('practico', 'Práctico')], max_length=20, verbose_name='Tipo de Examen')),
                ('descripcion', models.TextField(verbose_name='Descripción del Examen')),
                ('cantidad_preguntas', models.PositiveIntegerField(verbose_name='Cantidad de Preguntas')),
                ('tiempo_limite', models.PositiveIntegerField(verbose_name='Tiempo Límite (minutos)')),
                ('puntaje_minimo', models.DecimalField(decimal_places=2, default=70.0, max_digits=5, verbose_name='Puntaje Mínimo para Aprobar (%)')),
                ('activo', models.BooleanField(default=True, verbose_name='Examen Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examenes', to='authentication.curso', verbose_name='Curso')),
            ],
            options={
                'verbose_name': 'Examen',
                'verbose_name_plural': 'Exámenes',
                'db_table': 'examenes',
                'ordering': ['curso', 'tipo'],
            },
        ),
        migrations.CreateModel(
            name='IntentarExamen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Inicio')),
                ('fecha_finalizacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Finalización')),
                ('tiempo_utilizado', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tiempo Utilizado (minutos)')),
                ('estado', models.CharField(choices=[('iniciado', 'Iniciado'), ('completado', 'Completado'), ('abandonado', 'Abandonado')], default='iniciado', max_length=20, verbose_name='Estado')),
                ('puntaje_obtenido', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Puntaje Obtenido')),
                ('aprobado', models.BooleanField(default=False, verbose_name='Aprobado')),
                ('respuestas', models.JSONField(default=dict, verbose_name='Respuestas del Usuario')),
                ('examen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.examen', verbose_name='Examen')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Intento de Examen',
                'verbose_name_plural': 'Intentos de Examen',
                'db_table': 'intentos_examen',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto_pregunta', models.TextField(verbose_name='Texto de la Pregunta')),
                ('tipo', models.CharField(choices=[('multiple', 'Opción Múltiple'), ('verdadero_falso', 'Verdadero/Falso'), ('texto', 'Respuesta de Texto')], max_length=20, verbose_name='Tipo de Pregunta')),
                ('puntaje', models.DecimalField(decimal_places=2, default=1.0, max_digits=5, verbose_name='Puntaje')),
                ('orden', models.PositiveIntegerField(verbose_name='Orden en el Examen')),
                ('imagen_pregunta', models.ImageField(blank=True, null=True, upload_to='preguntas/', verbose_name='Imagen de la Pregunta')),
                ('examen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preguntas', to='authentication.examen', verbose_name='Examen')),
            ],
            options={
                'verbose_name': 'Pregunta',
                'verbose_name_plural': 'Preguntas',
                'db_table': 'preguntas',
                'ordering': ['examen', 'orden'],
                'unique_together': {('examen', 'orden')},
            },
        ),
        migrations.CreateModel(
            name='Inscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metodo_pago', models.CharField(choices=[('transferencia', 'Transferencia Bancaria'), ('deposito', 'Depósito en Efectivo')], max_length=20, verbose_name='Método de Pago')),
                ('comprobante_pago', models.FileField(upload_to='comprobantes/', verbose_name='Comprobante de Pago')),
                ('comentarios', models.TextField(blank=True, null=True, verbose_name='Comentarios')),
                ('estado_pago', models.CharField(choices=[('pendiente', 'Pendiente'), ('verificado', 'Verificado'), ('rechazado', 'Rechazado')], default='pendiente', max_length=20, verbose_name='Estado del Pago')),
                ('fecha_inscripcion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Inscripción')),
                ('fecha_verificacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Verificación')),
                ('fecha_inicio', models.DateField(blank=True, null=True, verbose_name='Fecha de Inicio')),
                ('fecha_examen_teorico', models.DateField(blank=True, null=True, verbose_name='Fecha Examen Teórico')),
                ('fecha_examen_practico', models.DateField(blank=True, null=True, verbose_name='Fecha Examen Práctico')),
                ('progreso', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Progreso (%)')),
                ('certificado_otorgado', models.BooleanField(default=False, verbose_name='Certificado Otorgado')),
                ('fecha_certificado', models.DateTimeField(blank=True, null=True, verbose_name='Fecha del Certificado')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.curso', verbose_name='Curso')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('verificado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verificaciones', to=settings.AUTH_USER_MODEL, verbose_name='Verificado por')),
            ],
            options={
                'verbose_name': 'Inscripción',
                'verbose_name_plural': 'Inscripciones',
                'db_table': 'inscripciones',
                'ordering': ['-fecha_inscripcion'],
                'unique_together': {('usuario', 'curso')},
            },
        ),
        migrations.CreateModel(
            name='OpcionRespuesta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto_opcion', models.TextField(verbose_name='Texto de la Opción')),
                ('es_correcta', models.BooleanField(default=False, verbose_name='Es Correcta')),
                ('orden', models.PositiveIntegerField(verbose_name='Orden de la Opción')),
                ('pregunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opciones', to='authentication.pregunta', verbose_name='Pregunta')),
            ],
            options={
                'verbose_name': 'Opción de Respuesta',
                'verbose_name_plural': 'Opciones de Respuesta',
                'db_table': 'opciones_respuesta',
                'ordering': ['pregunta', 'orden'],
                'unique_together': {('pregunta', 'orden')},
            },
        ),
    ]
